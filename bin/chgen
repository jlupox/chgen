#!/usr/bin/env ruby

require 'chgen'
require 'optparse'
require 'gist'

options = {}
# filenames = []

# require 'pry'

# binding.pry

OptionParser.new do |opts|
    executable_name = File.split($0)[1]
    opts.banner = <<-EOS
Explanation of the Cheat Sheet Generator

Usage: #{executable_name} [-o|-c|-e] [-f filename] [-s directory]
       #{executable_name} --another

    EOS

    opts.on("-f", "--filename FILE", "Cheat Sheet filename") do |filename|
        # filenames << filename
        options[:filename] = filename
    end

    opts.on("-s", "--sync DIRECTORY", "Cheat Sheet directory to sync") do |directory|
        options[:sync_directory] = directory
    end

end.parse!

# Raise an exeption if no options
raise OptionParser::MissingArgument if options.empty?

begin

    if options[:filename]
        Chgen.create(options[:filename])
    end
    if options[:sync_directory]
        Chgen.sync(options[:sync_directory])
    end

    # puts Chgen::Markdown.parse(options[:filename])
end
